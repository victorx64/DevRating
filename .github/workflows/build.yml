name: build

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Setup NuGet.exe for use with actions
      if: github.ref == 'refs/heads/master'
      uses: NuGet/setup-nuget@v1.0.2

    - name: Build with dotnet
      run:  dotnet build --configuration Release

    - name: Run tests
      run: |
        dotnet test ./DefaultObject.Test/DevRating.DefaultObject.Test.csproj --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]*
        dotnet test ./EloRating.Test/DevRating.EloRating.Test.csproj --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json"
        dotnet test ./SqliteClient.Test/DevRating.SqliteClient.Test.csproj --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json"
        dotnet test ./VersionControl.Test/DevRating.VersionControl.Test.csproj --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json" /p:CoverletOutputFormat=opencover

    - name: Codecov
      uses: codecov/codecov-action@v1.0.5
      with:
        name: devrating
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./TestResults/coverage.opencover.xml
        fail_ci_if_error: true

    - name: Push to NuGet
      if: github.ref == 'refs/heads/master'
      run: dotnet nuget push Package\*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org --skip-duplicate

    - name: Add GPR Source
      if: github.ref == 'refs/heads/master'
      run: nuget sources add -name "GPR" -Source https://nuget.pkg.github.com/victorx64/index.json -Username victorx64 -Password ${{ secrets.GITHUB_TOKEN }}	

    - name: Push to GitHub Packages
      if: github.ref == 'refs/heads/master'
      run: nuget push Package\*.nupkg -Source "GPR" -SkipDuplicate
