name: build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    # Speed-up analysis by caching the scanner workspace
    - name: Cache SonarCloud workspace
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-cache
        restore-keys: ${{ runner.os }}-sonar-cache

    # Speed-up analysis by caching the scanner installation
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      # The --version argument is optional. If it is omitted the latest version will be installed.
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Begin SonarScan
      run: JAVA_HOME=$JAVA_HOME_11_X64 ./.sonar/scanner/dotnet-sonarscanner begin /k:"victorx64_devrating" /o:"victorx64" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url="https://sonarcloud.io/" /d:sonar.cs.opencover.reportsPaths="./TestResults/coverage.opencover.xml"

    - name: Build with dotnet
      run:  dotnet build

    - name: Run tests
      run: |
          dotnet test ./consoleapp.test/devrating.consoleapp.test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]*
          dotnet test ./factory.test/devrating.factory.test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json"
          dotnet test ./git.test/devrating.git.test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json"
          dotnet test ./sqlite.test/devrating.sqlite.test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json" /p:CoverletOutputFormat=opencover

    - name: End SonarScan
      run: JAVA_HOME=$JAVA_HOME_11_X64 ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
