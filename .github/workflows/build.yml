name: build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: dotnet-sonarscanner
      uses: Secbyte/dotnet-sonarscanner@v1.2
      with:
        buildCommand: dotnet build
        testCommand: |
          dotnet test ./DefaultObject.Test/DevRating.DefaultObject.Test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]*
          dotnet test ./EloRating.Test/DevRating.EloRating.Test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json"
          dotnet test ./SqliteClient.Test/DevRating.SqliteClient.Test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json"
          dotnet test ./VersionControl.Test/DevRating.VersionControl.Test.csproj --no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:Exclude=[*.Fake]* /p:MergeWith="../TestResults/coverage.json" /p:CoverletOutputFormat=opencover
        projectKey: victorx64_devrating
        projectName: devrating
        sonarOrganisation: victorx64
        verbose: "true"
        openCoverPaths: "./TestResults/coverage.opencover.xml"
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
